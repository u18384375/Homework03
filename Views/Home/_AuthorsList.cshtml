
@{
    ViewBag.Title = "_AuthorsList";
}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<!-- Button to open the modal -->
<button id="openModalBtn" data-toggle="modal" data-target="#authorModal" class="btn btn-primary">Create Author</button>

<!-- Create Student Modal -->
<div class="modal fade" id="authorModal" tabindex="-1" role="dialog" aria-labelledby="authorModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="authorModal">Create Student</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="authorForm">
                    <div class="form-group">
                        <label for="name">First Name</label>
                        <input type="text" class="form-control" id="name" name="FirstName">
                    </div>
                    <div class="form-group">
                        <label for="surname">Last Name</label>
                        <input type="text" class="form-control" id="surname" name="LastName">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="createAuthor">Author Student</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="editAuthorModal" tabindex="-1" role="dialog" aria-labelledby="editAuthorModallLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAuthorModalLabel">Edit Author</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Form to edit student data -->
                <form id="editStudentForm">
                    <input type="hidden" id="borrowId" name="borrowId" value="">
                    <div class="form-group">
                        <label for="name">Author Name:</label>
                        <input type="text" class="form-control" id="name" name="name">
                    </div>
                    <div class="form-group">
                        <label for="surname">Surname Name:</label>
                        <input type="text" class="form-control" id="surname" name="surname">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveChangesBtn">Save Changes</button>
            </div>
        </div>
    </div>
</div>


<h2>Authors</h2>
<div id="table-container">
    <table class="table">
        <thead>
            <tr>
                <th>
                    name
                </th>
                <th>
                    surname
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var author in Model)
            {
                <tr>
                    <td>
                        @author.name
                    </td>
                    <td>
                        @author.surname
                    </td>
                    <td>
                        <button class="btn btn-warning" id="editauthor" data-student-id="@author.authorId">Edit</button>|
                        <button class="delete-btn btn btn-danger" data-author-id="@author.authorId">Delete Author</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
    <div id="pagination">
        <button id="prev">Previous</button>
        <button id="next">Next</button>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
    $(document).ready(function () {
        // Handle the click event of the "Create Student" button
        $("#createAuthor").on("click", function () {
            var Students = {
                name: $("#name").val(),
                surname: $("#surname").val()
            };

            // Make an AJAX POST request to the controller action
            $.ajax({
                url: "/Home/CreateAuthor",
                type: "POST",
                data: Students,
                success: function (result) {
                    if (result.success) {
                        // Optionally, close the modal
                        $("#authorModal").modal("hide");

                        // Refresh the student list or update the UI as needed
                    } else {
                        // Handle errors or validation messages if necessary
                    }
                }
            });
        });
    });
    $("#editauthor").click(function () {
        let authorId = $(this).data("authorId");
        $.ajax({
            url: '@Url.Action("Maintain", "Home")',
            type: 'GET',
            data: { id: authorId },
            success: function (author) {
                $("#authorId").val(author.authorId);
                $("#name").val(author.name);
                $("#surname").val(borrow.surname);
                $("#editAuthorModal").modal('show');
            }
        });
    });

    $("#saveChangesBtn").click(function () {
        let authorId = $("#authorId").val();
        let name = $("#name").val();
        let surname = $("#surname").val();

        $.ajax({
            url: '@Url.Action("UpdateBorrows", "Home")',
            type: 'POST',
            data: {
                authorId: authorId,
                name: name,
                surname: surname,

            },
            success: function (response) {
                console.log("Data updated successfully");
                $("#editAuthorModal").modal('hide');
            }
        });
        let typeIdToDelete;
        $(".delete-btn").click(function () {
            typeIdToDelete = $(this).data("type-id");
            $("#deleteTypeModal").modal('show');
        });
        $("#confirmDeleteBtn").click(function () {

            $.ajax({
                url: '/Home/DeleteType',
                type: 'POST',
                data: { id: typeIdToDelete },
                success: function (response) {
                    console.log("Type deleted successfully");
                    $("#deleteTypeModal").modal('hide');
                }
            });
        });
        let authorId;
        $(".delete-btn").click(function () {
            authorId = $(this).data("author-id");
            $("#deleteAuthorModal").modal('show');
        });
        $("#confirmDeleteBtn").click(function () {

            $.ajax({
                url: '/Home/DeleteAuthor',
                type: 'POST',
                data: { id: authorId },
                success: function (response) {
                    console.log("Author deleted successfully");
                    $("#deleteAuthorModal").modal('hide');
                }
            });
        });

        const itemsPerPage = 5;
        const $tableRows = $("#table-container tbody tr");
        const maxPage = Math.ceil($tableRows.length / itemsPerPage);
        let currentPage = 1;

        function showPage(page) {
            $tableRows.hide();
            const startIndex = (page - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;
            $tableRows.slice(startIndex, endIndex).show();
        }
        showPage(currentPage);

        $("#prev").on("click", function () {
            if (currentPage > 1) {
                currentPage--;
                showPage(currentPage);
            }
        });

        $("#next").on("click", function () {
            if (currentPage < maxPage) {
                currentPage++;
                showPage(currentPage);
            }
        });
    });

    </script>

